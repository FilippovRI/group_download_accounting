
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПолучитьВсехВладельцев();
	Элементы.ВладелецФайла.СписокВыбора.ЗагрузитьЗначения(СписокВладельцевФайла.ВыгрузитьЗначения());   
	ЗаполнитьХранителяФайла();
КонецПроцедуры
&НаСервере
Процедура ПолучитьВсехВладельцев()
	
	Для Данного = 0 по Метаданные.Справочники.Количество()-1 Цикл
		Имя=Метаданные.Справочники[Данного].Имя;
		Если Найти(Имя, "ПрисоединенныеФайлы") > 0 Тогда
			СписокВладельцевФайла.Добавить("Справочник."+ Имя);
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры 
&НаСервере
Функция ЗаполнитьХранителяФайла()
	
	ДлинаСправочника=СтрДлина("ПрисоединенныеФайлы");
	Для Данного = 0 по Метаданные.Справочники.Количество()-1 Цикл
		Имя=Метаданные.Справочники[Данного].Имя;
		Если Найти(Имя, "ПрисоединенныеФайлы") > 0 Тогда
			СписокВладельцевФайла.Добавить(Лев(Имя,СтрДлина(Имя)-ДлинаСправочника));
		КонецЕсли;
	КонецЦикла;	
	Возврат СписокВладельцевФайла.Количество()>0;
КонецФункции
&НаКлиенте
Процедура ВыбратьВсе(Команда)
	Для каждого ТекущаяСтрока Из ТЗ Цикл		
		ТекущаяСтрока.ОтметитьВсе = Элементы.ТЗ.ПроверитьСтроку(ТекущаяСтрока.ПолучитьИдентификатор());			
	КонецЦикла;
КонецПроцедуры
&НаКлиенте
Процедура СнятьВсе(Команда)
	Для каждого ТекущаяСтрока Из ТЗ Цикл		
		Если Элементы.ТЗ.ПроверитьСтроку(ТекущаяСтрока.ПолучитьИдентификатор()) Тогда
			ТекущаяСтрока.ОтметитьВсе = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьПоОтбору(Команда)
	ТЗ.Очистить();
	ЗаполнитьПоОтборуТЗ();
КонецПроцедуры
&НаСервере
Функция ЗаполнитьПоОтборуТЗ()
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ПоступлениеТоваровУслуг.Ссылка КАК Владелец,
	               |	ПоступлениеТоваровУслугПрисоединенныеФайлы.Ссылка КАК Ссылка,
	               |	ИСТИНА КАК ОтметитьВсе
	               |ИЗ
	               |	Справочник.ПоступлениеТоваровУслугПрисоединенныеФайлы КАК ПоступлениеТоваровУслугПрисоединенныеФайлы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |		ПО ПоступлениеТоваровУслугПрисоединенныеФайлы.ВладелецФайла = ПоступлениеТоваровУслуг.Ссылка
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &ОтборПоПериоду
	               |				ТОГДА ПоступлениеТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ  
				   | И ВЫБОР
	               |			КОГДА &ОтборПоКонтрагенту
	               |				ТОГДА ПоступлениеТоваровУслуг.Контрагент = &Контрагент
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ
	               |	
	               |	И ВЫБОР
	               |			КОГДА &ОтборПоОрганизации
	               |				ТОГДА ПоступлениеТоваровУслуг.Организация = &Организация
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"Справочник.ПоступлениеТоваровУслугПрисоединенныеФайлы",ВладелецФайла);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"Документ.ПоступлениеТоваровУслуг",Хранительфайла);
	Если Хранительфайла = "Справочник.ДоговорыКонтрагентов" Тогда
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ПоступлениеТоваровУслуг.Контрагент","ПоступлениеТоваровУслуг.Владелец");
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДатаНачала",ОтборПоПериоду.ДатаНачала); 
	Запрос.УстановитьПараметр("ОтборПоПериоду",ОтборПериод);
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.УстановитьПараметр("ОтборПоКонтрагенту",ОтборКонтрагент);
	Запрос.УстановитьПараметр("Организация",ОтборПоОрганизации);
	Запрос.УстановитьПараметр("ОтборПоОрганизации",ОтборОрг);
	Запрос.УстановитьПараметр("ДатаОкончания",ОтборПоПериоду.ДатаОкончания); 
	ТЗ.Загрузить(Запрос.Выполнить().Выгрузить());
КонецФункции	
&НаКлиенте
Процедура ОтборПоПериодуПриИзменении(Элемент)
	ОтборПериод = Истина;
КонецПроцедуры
&НаКлиенте
Процедура ОтборПоОрганизацииПриИзменении(Элемент)
	ОтборОрг = Истина;
КонецПроцедуры
&НаКлиенте
Процедура СохранитьНакомпьютер(Команда)
	Если ТЗ.Количество() = 0 Тогда 
		Сообщить("Нет данных для сохранения!");
		Возврат;
	КонецЕсли;


	Если Не ЗначениеЗаполнено(БазовыйКаталог) Тогда
		Сообщить("Заполни базовый каталог!");
		Возврат;
	КонецЕсли; 
	
	ПараметрыСохранения
	= СформироватьФайлЗапросаВФНСНаПроверкуСведенийРаботников();
	
	Если ТипЗнч(ПараметрыСохранения) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьПрисоединенныеФайлы(ПараметрыСохранения);

	
КонецПроцедуры       
&НаКлиенте
Процедура СохранитьПрисоединенныеФайлы(ПараметрыСохранения)
	
	Оп = Новый ОписаниеОповещения(
	"СохранитьПрисоединенныеФайлыПродолжение", ЭтотОбъект, ПараметрыСохранения);
	
	НачатьПодключениеРасширенияРаботыСФайлами(Оп);
	
КонецПроцедуры
&НаКлиенте
Процедура СохранитьПрисоединенныеФайлыПродолжение(Подключено, ПараметрыСохранения) Экспорт
	
	Если НЕ Подключено Тогда
								
			НачатьПолучениеФайловССервера(ПараметрыСохранения.ПолучаемыеФайлы);
					
		Возврат;
		
	КонецЕсли;
	
	Оп = Новый ОписаниеОповещения(
	"СохранитьПрисоединенныеФайлыЗавершение", ЭтотОбъект, ПараметрыСохранения);
	
		
		НачатьПолучениеФайловССервера(Оп, ПараметрыСохранения.ПолучаемыеФайлы, Ложь);
		
	
КонецПроцедуры
&НаКлиенте
Процедура СохранитьПрисоединенныеФайлыЗавершение(ПолученныеФайлы, ПараметрыСохранения) Экспорт
	
	Если ПолученныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПолученныеФайлы.Количество() = 1 Тогда
		
		РазделительПутиОС = ПолучитьРазделительПути();
		ПолноеИмяПолученногоФайла = СтрЗаменить(ПолученныеФайлы[0].ПолноеИмя, "/", РазделительПутиОС);
		ДанныеФайла = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ПолноеИмяПолученногоФайла);
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
			"ru='Файл %1 сохранен в каталог %2.'"),
			ДанныеФайла.Имя, ДанныеФайла.Путь));
	ИначеЕсли ПолученныеФайлы.Количество() > 1 Тогда
		ТекстСообщения = "Файлы сохранены:";
		Для Каждого ПолучФайл Из ПолученныеФайлы Цикл
			ДанныеФайла = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ПолучФайл.ПолноеИмя);
			ТекстСообщения = ТекстСообщения + Символы.ПС + "- """ + ДанныеФайла.Имя + """;";
		КонецЦикла;
		ТекстСообщения = ТекстСообщения + Символы.ПС + "в каталог """ + ДанныеФайла.Путь + """.";
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры
&НаСервере
Функция СформироватьФайлЗапросаВФНСНаПроверкуСведенийРаботников() Экспорт
		
	Результат = Новый Структура();
	Результат.Вставить("ПолучаемыеФайлы", Новый Массив);
	
	Для каждого стр Из ТЗ Цикл
		Если стр.ОтметитьВсе=Истина тогда				
		ДвоичныеДанныеФайла =РаботаСФайлами.ДвоичныеДанныеФайла(стр.Ссылка);
		АдресФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла, Новый УникальныйИдентификатор);
		Результат.ПолучаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(
		БазовыйКаталог+стр.Ссылка.Наименование+"."+стр.Ссылка.Расширение, АдресФайла));
	КонецЕсли;	
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции
&НаКлиенте
Процедура БазовыйКаталогНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
 	СтандартнаяОбработка = Ложь;
    ДополнительныеПараметры = Новый Структура;
    ДополнительныеПараметры.Вставить("ВыборЗавершение", Новый ОписаниеОповещения("ВложениеВыборЗавершение", ЭтотОбъект));
    Оповещение = Новый ОписаниеОповещения("НачатьПодключениеРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
    НачатьПодключениеРасширенияРаботыСФайлами(Оповещение);
КонецПроцедуры    
&НаКлиенте
Процедура НачатьПодключениеРасширенияРаботыСФайламиЗавершение(Подключено, ДополнительныеПараметры) Экспорт
    Если Не Подключено Тогда
        Оповещение = Новый ОписаниеОповещения("НачатьУстановкуРасширенияРаботыСФайламиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
        ТекстСообщения = НСтр("ru='Для продолжении работы необходимо установить расширение для веб-клиента ""1С:Предприятие"". Установить?'");
        ПоказатьВопрос(Оповещение, ТекстСообщения, РежимДиалогаВопрос.ДаНет); 
    Иначе
        ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ВыборЗавершение);
    КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура НачатьУстановкуРасширенияРаботыСФайламиЗавершение(Результат, ДополнительныеПараметры) Экспорт
    Если Результат = КодВозвратаДиалога.Да Тогда
        НачатьУстановкуРасширенияРаботыСФайлами(ДополнительныеПараметры.ВыборЗавершение);
    КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ВложениеВыборЗавершение(ДополнительныеПараметры, ДопПараметр) Экспорт
    НачатьПолучениеКаталогаДокументов(Новый ОписаниеОповещения("КаталогДокументовЗавершение", ЭтотОбъект));
КонецПроцедуры
&НаКлиенте
Процедура КаталогДокументовЗавершение(ИмяКаталогаДокументов, ДополнительныеПараметры) Экспорт 
    Диалог = новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
    ОписаниеОп=новый ОписаниеОповещения("КаталогВыбран", ЭтотОбъект);
    Диалог.Показать(ОписаниеОп);
КонецПроцедуры 
&НаКлиенте
Процедура КаталогВыбран(ВыбранныеФайлы, ДополнительныеПараметры)  Экспорт
    Если ВыбранныеФайлы<>Неопределено и ВыбранныеФайлы.Количество()>0 Тогда
        БазовыйКаталог = ВыбранныеФайлы[0]+"\";
    КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ВладелецФайлаПриИзменении(Элемент)
	СменаВладельца();
КонецПроцедуры
&НаСервере
Процедура СменаВладельца()
	Если ВладелецФайла="" тогда 
		ВлВл=Неопределено;
		Хранительфайла="";
		Возврат;
	КонецЕсли;
	ОбъектМетаданных=Метаданные.НайтиПоПолномуИмени(ВладелецФайла);
	Если ОбъектМетаданных = Неопределено Тогда 
		Возврат;	
	КонецЕсли;
	мсвТипов=ОбъектМетаданных.реквизиты["ВладелецФайла"].Тип.Типы();

	ВлВл=мсвТипов[0];

	Хранительфайла=Метаданные.НайтиПоТипу(ВлВл).ПолноеИмя();
		
КонецПроцедуры	
&НаКлиенте
Процедура Контрагент1ПриИзменении(Элемент)
	ОтборКонтрагент = Истина;
КонецПроцедуры


